; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=amdgcn-amd-amdhsa -mcpu=gfx900 < %s | FileCheck %s

%struct.Large = type { [1024 x i64] }

define amdgpu_kernel void @_Z4test5LargePi(ptr addrspace(4) nocapture noundef readonly byref(%struct.Large) align 8 %0, ptr addrspace(1) nocapture noundef writeonly %o.coerce) {
; CHECK-LABEL: _Z4test5LargePi:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    s_add_u32 s0, s0, s17
; CHECK-NEXT:    v_mov_b32_e32 v1, 0x2000
; CHECK-NEXT:    s_addc_u32 s1, s1, 0
; CHECK-NEXT:    s_mov_b32 s6, 8
; CHECK-NEXT:    v_mov_b32_e32 v2, 0
; CHECK-NEXT:    s_mov_b64 s[4:5], 0
; CHECK-NEXT:  .LBB0_1: ; %load-store-loop
; CHECK-NEXT:    ; =>This Inner Loop Header: Depth=1
; CHECK-NEXT:    s_add_u32 s10, s8, s4
; CHECK-NEXT:    s_addc_u32 s11, s9, s5
; CHECK-NEXT:    s_load_dwordx16 s[52:67], s[10:11], 0xc0
; CHECK-NEXT:    s_load_dwordx16 s[12:27], s[10:11], 0x0
; CHECK-NEXT:    s_load_dwordx16 s[36:51], s[10:11], 0x40
; CHECK-NEXT:    s_add_u32 s4, s4, 0x100
; CHECK-NEXT:    s_addc_u32 s5, s5, 0
; CHECK-NEXT:    s_waitcnt lgkmcnt(0)
; CHECK-NEXT:    v_mov_b32_e32 v4, s67
; CHECK-NEXT:    v_mov_b32_e32 v5, s66
; CHECK-NEXT:    v_mov_b32_e32 v6, s65
; CHECK-NEXT:    v_mov_b32_e32 v7, s64
; CHECK-NEXT:    v_mov_b32_e32 v8, s63
; CHECK-NEXT:    v_mov_b32_e32 v9, s62
; CHECK-NEXT:    v_mov_b32_e32 v10, s61
; CHECK-NEXT:    v_mov_b32_e32 v11, s60
; CHECK-NEXT:    v_mov_b32_e32 v12, s59
; CHECK-NEXT:    v_mov_b32_e32 v13, s58
; CHECK-NEXT:    v_mov_b32_e32 v14, s57
; CHECK-NEXT:    v_mov_b32_e32 v15, s56
; CHECK-NEXT:    v_mov_b32_e32 v16, s55
; CHECK-NEXT:    v_mov_b32_e32 v17, s54
; CHECK-NEXT:    v_mov_b32_e32 v18, s53
; CHECK-NEXT:    v_mov_b32_e32 v19, s52
; CHECK-NEXT:    s_load_dwordx16 s[52:67], s[10:11], 0x80
; CHECK-NEXT:    v_mov_b32_e32 v3, s6
; CHECK-NEXT:    v_cmp_lt_u64_e32 vcc, s[4:5], v[1:2]
; CHECK-NEXT:    buffer_store_dword v4, v3, s[0:3], 0 offen offset:252
; CHECK-NEXT:    buffer_store_dword v5, v3, s[0:3], 0 offen offset:248
; CHECK-NEXT:    s_waitcnt lgkmcnt(0)
; CHECK-NEXT:    v_mov_b32_e32 v20, s67
; CHECK-NEXT:    v_mov_b32_e32 v4, s66
; CHECK-NEXT:    v_mov_b32_e32 v5, s65
; CHECK-NEXT:    buffer_store_dword v6, v3, s[0:3], 0 offen offset:244
; CHECK-NEXT:    v_mov_b32_e32 v6, s64
; CHECK-NEXT:    buffer_store_dword v7, v3, s[0:3], 0 offen offset:240
; CHECK-NEXT:    v_mov_b32_e32 v7, s63
; CHECK-NEXT:    buffer_store_dword v8, v3, s[0:3], 0 offen offset:236
; CHECK-NEXT:    v_mov_b32_e32 v8, s62
; CHECK-NEXT:    buffer_store_dword v9, v3, s[0:3], 0 offen offset:232
; CHECK-NEXT:    v_mov_b32_e32 v9, s61
; CHECK-NEXT:    buffer_store_dword v10, v3, s[0:3], 0 offen offset:228
; CHECK-NEXT:    v_mov_b32_e32 v10, s60
; CHECK-NEXT:    buffer_store_dword v11, v3, s[0:3], 0 offen offset:224
; CHECK-NEXT:    v_mov_b32_e32 v11, s59
; CHECK-NEXT:    buffer_store_dword v12, v3, s[0:3], 0 offen offset:220
; CHECK-NEXT:    v_mov_b32_e32 v12, s58
; CHECK-NEXT:    buffer_store_dword v13, v3, s[0:3], 0 offen offset:216
; CHECK-NEXT:    v_mov_b32_e32 v13, s57
; CHECK-NEXT:    buffer_store_dword v14, v3, s[0:3], 0 offen offset:212
; CHECK-NEXT:    v_mov_b32_e32 v14, s56
; CHECK-NEXT:    buffer_store_dword v15, v3, s[0:3], 0 offen offset:208
; CHECK-NEXT:    v_mov_b32_e32 v15, s55
; CHECK-NEXT:    buffer_store_dword v16, v3, s[0:3], 0 offen offset:204
; CHECK-NEXT:    v_mov_b32_e32 v16, s54
; CHECK-NEXT:    buffer_store_dword v17, v3, s[0:3], 0 offen offset:200
; CHECK-NEXT:    v_mov_b32_e32 v17, s53
; CHECK-NEXT:    s_addk_i32 s6, 0x100
; CHECK-NEXT:    s_and_b64 vcc, exec, vcc
; CHECK-NEXT:    buffer_store_dword v18, v3, s[0:3], 0 offen offset:196
; CHECK-NEXT:    v_mov_b32_e32 v18, s52
; CHECK-NEXT:    buffer_store_dword v19, v3, s[0:3], 0 offen offset:192
; CHECK-NEXT:    v_mov_b32_e32 v19, s51
; CHECK-NEXT:    buffer_store_dword v20, v3, s[0:3], 0 offen offset:188
; CHECK-NEXT:    v_mov_b32_e32 v20, s50
; CHECK-NEXT:    buffer_store_dword v4, v3, s[0:3], 0 offen offset:184
; CHECK-NEXT:    v_mov_b32_e32 v4, s49
; CHECK-NEXT:    buffer_store_dword v5, v3, s[0:3], 0 offen offset:180
; CHECK-NEXT:    v_mov_b32_e32 v5, s48
; CHECK-NEXT:    buffer_store_dword v6, v3, s[0:3], 0 offen offset:176
; CHECK-NEXT:    v_mov_b32_e32 v6, s47
; CHECK-NEXT:    buffer_store_dword v7, v3, s[0:3], 0 offen offset:172
; CHECK-NEXT:    v_mov_b32_e32 v7, s46
; CHECK-NEXT:    buffer_store_dword v8, v3, s[0:3], 0 offen offset:168
; CHECK-NEXT:    v_mov_b32_e32 v8, s45
; CHECK-NEXT:    buffer_store_dword v9, v3, s[0:3], 0 offen offset:164
; CHECK-NEXT:    v_mov_b32_e32 v9, s44
; CHECK-NEXT:    buffer_store_dword v10, v3, s[0:3], 0 offen offset:160
; CHECK-NEXT:    v_mov_b32_e32 v10, s43
; CHECK-NEXT:    buffer_store_dword v11, v3, s[0:3], 0 offen offset:156
; CHECK-NEXT:    v_mov_b32_e32 v11, s42
; CHECK-NEXT:    buffer_store_dword v12, v3, s[0:3], 0 offen offset:152
; CHECK-NEXT:    v_mov_b32_e32 v12, s41
; CHECK-NEXT:    buffer_store_dword v13, v3, s[0:3], 0 offen offset:148
; CHECK-NEXT:    v_mov_b32_e32 v13, s40
; CHECK-NEXT:    buffer_store_dword v14, v3, s[0:3], 0 offen offset:144
; CHECK-NEXT:    v_mov_b32_e32 v14, s39
; CHECK-NEXT:    buffer_store_dword v15, v3, s[0:3], 0 offen offset:140
; CHECK-NEXT:    v_mov_b32_e32 v15, s38
; CHECK-NEXT:    buffer_store_dword v16, v3, s[0:3], 0 offen offset:136
; CHECK-NEXT:    v_mov_b32_e32 v16, s37
; CHECK-NEXT:    buffer_store_dword v17, v3, s[0:3], 0 offen offset:132
; CHECK-NEXT:    v_mov_b32_e32 v17, s36
; CHECK-NEXT:    buffer_store_dword v18, v3, s[0:3], 0 offen offset:128
; CHECK-NEXT:    v_mov_b32_e32 v18, s27
; CHECK-NEXT:    buffer_store_dword v19, v3, s[0:3], 0 offen offset:124
; CHECK-NEXT:    v_mov_b32_e32 v19, s26
; CHECK-NEXT:    buffer_store_dword v20, v3, s[0:3], 0 offen offset:120
; CHECK-NEXT:    v_mov_b32_e32 v20, s25
; CHECK-NEXT:    buffer_store_dword v4, v3, s[0:3], 0 offen offset:116
; CHECK-NEXT:    v_mov_b32_e32 v4, s24
; CHECK-NEXT:    buffer_store_dword v5, v3, s[0:3], 0 offen offset:112
; CHECK-NEXT:    v_mov_b32_e32 v5, s23
; CHECK-NEXT:    buffer_store_dword v6, v3, s[0:3], 0 offen offset:108
; CHECK-NEXT:    v_mov_b32_e32 v6, s22
; CHECK-NEXT:    buffer_store_dword v7, v3, s[0:3], 0 offen offset:104
; CHECK-NEXT:    v_mov_b32_e32 v7, s21
; CHECK-NEXT:    buffer_store_dword v8, v3, s[0:3], 0 offen offset:100
; CHECK-NEXT:    v_mov_b32_e32 v8, s20
; CHECK-NEXT:    buffer_store_dword v9, v3, s[0:3], 0 offen offset:96
; CHECK-NEXT:    v_mov_b32_e32 v9, s19
; CHECK-NEXT:    buffer_store_dword v10, v3, s[0:3], 0 offen offset:92
; CHECK-NEXT:    v_mov_b32_e32 v10, s18
; CHECK-NEXT:    buffer_store_dword v11, v3, s[0:3], 0 offen offset:88
; CHECK-NEXT:    v_mov_b32_e32 v11, s17
; CHECK-NEXT:    buffer_store_dword v12, v3, s[0:3], 0 offen offset:84
; CHECK-NEXT:    v_mov_b32_e32 v12, s16
; CHECK-NEXT:    buffer_store_dword v13, v3, s[0:3], 0 offen offset:80
; CHECK-NEXT:    v_mov_b32_e32 v13, s15
; CHECK-NEXT:    buffer_store_dword v14, v3, s[0:3], 0 offen offset:76
; CHECK-NEXT:    v_mov_b32_e32 v14, s14
; CHECK-NEXT:    buffer_store_dword v15, v3, s[0:3], 0 offen offset:72
; CHECK-NEXT:    v_mov_b32_e32 v15, s13
; CHECK-NEXT:    buffer_store_dword v16, v3, s[0:3], 0 offen offset:68
; CHECK-NEXT:    v_mov_b32_e32 v16, s12
; CHECK-NEXT:    buffer_store_dword v17, v3, s[0:3], 0 offen offset:64
; CHECK-NEXT:    buffer_store_dword v18, v3, s[0:3], 0 offen offset:60
; CHECK-NEXT:    buffer_store_dword v19, v3, s[0:3], 0 offen offset:56
; CHECK-NEXT:    buffer_store_dword v20, v3, s[0:3], 0 offen offset:52
; CHECK-NEXT:    buffer_store_dword v4, v3, s[0:3], 0 offen offset:48
; CHECK-NEXT:    buffer_store_dword v5, v3, s[0:3], 0 offen offset:44
; CHECK-NEXT:    buffer_store_dword v6, v3, s[0:3], 0 offen offset:40
; CHECK-NEXT:    buffer_store_dword v7, v3, s[0:3], 0 offen offset:36
; CHECK-NEXT:    buffer_store_dword v8, v3, s[0:3], 0 offen offset:32
; CHECK-NEXT:    buffer_store_dword v9, v3, s[0:3], 0 offen offset:28
; CHECK-NEXT:    buffer_store_dword v10, v3, s[0:3], 0 offen offset:24
; CHECK-NEXT:    buffer_store_dword v11, v3, s[0:3], 0 offen offset:20
; CHECK-NEXT:    buffer_store_dword v12, v3, s[0:3], 0 offen offset:16
; CHECK-NEXT:    buffer_store_dword v13, v3, s[0:3], 0 offen offset:12
; CHECK-NEXT:    buffer_store_dword v14, v3, s[0:3], 0 offen offset:8
; CHECK-NEXT:    buffer_store_dword v15, v3, s[0:3], 0 offen offset:4
; CHECK-NEXT:    buffer_store_dword v16, v3, s[0:3], 0 offen
; CHECK-NEXT:    s_cbranch_vccnz .LBB0_1
; CHECK-NEXT:  ; %bb.2: ; %memcpy-split
; CHECK-NEXT:    v_mov_b32_e32 v1, 8
; CHECK-NEXT:    v_lshl_add_u32 v1, v0, 3, v1
; CHECK-NEXT:    buffer_load_dword v1, v1, s[0:3], 0 offen
; CHECK-NEXT:    s_load_dwordx2 s[4:5], s[8:9], 0x2000
; CHECK-NEXT:    v_lshlrev_b32_e32 v0, 2, v0
; CHECK-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; CHECK-NEXT:    global_store_dword v0, v1, s[4:5]
; CHECK-NEXT:    s_endpgm
entry:
  %coerce = alloca %struct.Large, align 8, addrspace(5)
  call void @llvm.memcpy.p5.p4.i64(ptr addrspace(5) align 8 %coerce, ptr addrspace(4) align 8 %0, i64 8192, i1 false)
  %1 = call noundef i32 @llvm.amdgcn.workitem.id.x()
  %idxprom = zext nneg i32 %1 to i64
  %arrayidx = getelementptr inbounds [1024 x i64], ptr addrspace(5) %coerce, i64 0, i64 %idxprom
  %2 = load i64, ptr addrspace(5) %arrayidx, align 8
  %conv = trunc i64 %2 to i32
  %arrayidx3 = getelementptr inbounds i32, ptr addrspace(1) %o.coerce, i64 %idxprom
  store i32 %conv, ptr addrspace(1) %arrayidx3, align 4
  ret void
}

declare noundef i32 @llvm.amdgcn.workitem.id.x()
